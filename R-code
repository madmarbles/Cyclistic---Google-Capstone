## Install necessary packages

library(tidyverse)
library(janitor)
library(lubridate)

## Open necessary files

q2_2019 <- read_csv("Divvy_Trips_2019_Q2.csv")
q3_2019 <- read_csv("Divvy_Trips_2019_Q3.csv")
q4_2019 <- read_csv("Divvy_Trips_2019_Q4.csv")
q1_2020 <- read_csv("Divvy_Trips_2020_Q1.csv")

## Compare column names
colnames(q2_2019)
colnames(q3_2019)
colnames(q4_2019)
colnames(q1_2020)

## Rename inconsistent column names
(q2_2019 <- rename(q2_2019,
                   ride_id = "01 - Rental Details Rental ID",
                   rideable_type = "01 - Rental Details Bike ID",
                   started_at = "01 - Rental Details Local Start Time",
                   ended_at = "01 - Rental Details Local End Time",
                   start_station_name = "03 - Rental Start Station Name",
                   start_station_id = "03 - Rental Start Station ID",
                   end_station_name = "02 - Rental End Station Name",
                   end_station_id = "02 - Rental End Station ID",
                   member_casual = "User Type"))

(q3_2019 <- rename(q3_2019,
                   ride_id = "trip_id",
                   rideable_type = "bikeid",
                   started_at = "start_time",
                   ended_at = "end_time",
                   start_station_name = "from_station_name",
                   start_station_id = "from_station_id",
                   end_station_name = "to_station_name",
                   end_station_id = "to_station_id",
                   member_casual = "usertype"))

(q4_2019 <- rename(q4_2019,
                   ride_id = "trip_id",
                   rideable_type = "bikeid",
                   started_at = "start_time",
                   ended_at = "end_time",
                   start_station_name = "from_station_name",
                   start_station_id = "from_station_id",
                   end_station_name = "to_station_name",
                   end_station_id = "to_station_id",
                   member_casual = "usertype"))

## Inspect and check for inconsistencies
str(q2_2019)
str(q3_2019)
str(q4_2019)
str(q1_2020)

## Aggregate columns with similar data
q2_2019 <- mutate(q2_2019, ride_id = as.character(ride_id),
                  rideable_type = as.character(rideable_type))
q3_2019 <- mutate(q3_2019, ride_id = as.character(ride_id),
                  rideable_type = as.character(rideable_type))
q4_2019 <- mutate(q4_2019, ride_id = as.character(ride_id),
                  rideable_type = as.character(rideable_type))

## Combine all data frames
all_trips <- bind_rows(q2_2019,q3_2019,q4_2019,q1_2020)

## Remove irrelevant columns
all_trips <- all_trips%>%
  select(-c(start_lat, start_lng, end_lat, end_lng, birthyear, gender,
            "05 - Member Details Member Birthday Year", "Member Gender",
            tripduration, "01 - Rental Details Duration In Seconds Uncapped"))

## Inspect the new table 
colnames(all_trips)
nrow(all_trips)
dim(all_trips)
head(all_trips)
tail(all_trips)
str(all_trips)
summary(all_trips)

## Clean data

## Consolidate the "member_casual" column
table(all_trips$member_casual)
all_trips <- all_trips%>%
  mutate(member_casual = recode(member_casual, "Subscriber"="member",
                                "Customer"="casual"))

## Add columns that lists different date formats
all_trips$date <- as.Date(all_trips$started_at)
all_trips$month <- format(as.Date(all_trips$date), "%m")
all_trips$day <- format(as.Date(all_trips$date), "%d")
all_trips$year <- format(as.Date(all_trips$date), "%Y")
all_trips$day_of_week <- format(as.Date(all_trips$date), "%A")

## Add a calculated field "ride_length" to get the trip duration for the entire dataframe and covert for calculations
all_trips$ride_length <- difftime(all_trips$ended_at, all_trips$started_at)
is.factor(all_trips$ride_length)
all_trips$ride_length <- as.numeric(as.character(all_trips$ride_length))
is.numeric(all_trips$ride_length)

##  Remove bad data
all_trips_v2 <- all_trips[!(all_trips$start_station_name=="HQ QR" | all_trips$ride_length<0),]

##Calculations

## Number of rides - weekly 
options(scipen = 999)
weekly_plot1 <- trips_summary2%>%
  ggplot(aes(x=weekday, y=number_of_rides, fill=member_casual)) +
  geom_col(position = "dodge") +
  labs(title = "Weekly Number of Rides By Rider Type")

## Average duration - weekly
weekly_plot2 <- trips_summary2%>%
  ggplot(aes(x=weekday, y=average_duration, fill=member_casual)) +
  geom_col(position = "dodge") +
  labs(title = "Weekly Average Duration By Rider Type")

## Average duration by seasons
##Spring  
spring_plot2 <- trips_summary3%>%
  filter(yearmonth =="Apr"|yearmonth =="May"|yearmonth =="Jun")%>%
  ggplot(aes(x=yearmonth, y=average_duration, fill=member_casual)) +
  geom_col(position = "dodge") +
  labs(title = "Average Duration By Rider Type - Spring")

##Summer
summer_plot2 <- trips_summary3%>%
  filter(yearmonth =="Jul"|yearmonth =="Aug"|yearmonth =="Sep")%>%
  ggplot(aes(x=yearmonth, y=average_duration, fill=member_casual)) +
  geom_col(position = "dodge") +
  labs(title = "Average Duration By Rider Type - Summer")

##Fall
fall_plot2 <- trips_summary3%>%
  filter(yearmonth =="Oct"|yearmonth =="Nov"|yearmonth =="Dec")%>%
  ggplot(aes(x=yearmonth, y=average_duration, fill=member_casual)) +
  geom_col(position = "dodge") +
  labs(title = "Average Duration By Rider Type - Fall")


##Winter
winter_plot2 <- trips_summary3%>%
  filter(yearmonth =="Jan"|yearmonth =="Feb"|yearmonth =="Mar")%>%
  ggplot(aes(x=yearmonth, y=average_duration, fill=member_casual)) +
  geom_col(position = "dodge") +
  labs(title = "Average Duration By Rider Type - Winter")

##Average duration by seasons dashboard
library(patchwork)
(spring_plot2 | summer_plot2) / (fall_plot2 | winter_plot2)

##Number of rides by seasons
##Spring
spring_plot1 <- trips_summary3%>%
  filter(yearmonth =="Apr"|yearmonth =="May"|yearmonth =="Jun")%>%
  ggplot(aes(x=yearmonth, y=number_of_rides, fill=member_casual)) +
  geom_col(position = "dodge") +
  labs(title = "Number of Rides By Rider Type - Spring")

##Summer
summer_plot1 <- trips_summary3%>%
  filter(yearmonth =="Jul"|yearmonth =="Aug"|yearmonth =="Sep")%>%
  ggplot(aes(x=yearmonth, y=number_of_rides, fill=member_casual)) +
  geom_col(position = "dodge") +
  labs(title = "Number of Rides By Rider Type - Summer")

##Fall
fall_plot1 <- trips_summary3%>%
  filter(yearmonth =="Oct"|yearmonth =="Nov"|yearmonth =="Dec")%>%
  ggplot(aes(x=yearmonth, y=number_of_rides, fill=member_casual)) +
  geom_col(position = "dodge") +
  labs(title = "Number of Rides By Rider Type - Fall")

##Winter
winter_plot1 <- trips_summary3%>%
  filter(yearmonth =="Jan"|yearmonth =="Feb"|yearmonth =="Mar")%>%
  ggplot(aes(x=yearmonth, y=number_of_rides, fill=member_casual)) +
  geom_col(position = "dodge") +
  labs(title = "Number of Rides By Rider Type - Winter")

##Number of rides by seasons dashboard
(spring_plot1 | summer_plot1) / (fall_plot1 | winter_plot1)

## Individual Plot (casual / member) - Weekly
## Member
member_plot1 <- trips_summary2%>%
  filter(member_casual == "member")%>%
  ggplot(aes(x=weekday, y=number_of_rides, fill=member_casual)) +
  geom_col(position = "dodge") +
  scale_fill_manual(values = c("#87CEEB")) +
  labs(title = "Number of Rides By Rider Type - Weekly")

member_plot2 <- trips_summary2%>%
  filter(member_casual == "member")%>%
  ggplot(aes(x=weekday, y=average_duration, fill=member_casual)) +
  geom_col(position = "dodge") +
  scale_fill_manual(values = c("#87CEEB")) +
  labs(title = "Average Duration By Rider Type - Weekly")

##Casual
casual_plot1 <- trips_summary2%>%
  filter(member_casual == "casual")%>%
  ggplot(aes(x=weekday, y=number_of_rides, fill=member_casual)) +
  geom_col(position = "dodge") +
  labs(title = "Number of Rides By Rider Type - Weekly")

casual_plot2 <- trips_summary2%>%
  filter(member_casual == "casual")%>%
  ggplot(aes(x=weekday, y=average_duration, fill=member_casual)) +
  geom_col(position = "dodge") +
  labs(title = "Average Duration By Rider Type - Weekly")

## Individual dashboard - Weekly
(member_plot1 | member_plot2) / (casual_plot1 | casual_plot2)

## Individual Plot (casual / member) - monthly
##Member
member_plot3 <- trips_summary3%>%
  filter(member_casual == "member")%>%
  ggplot(aes(x=yearmonth, y=number_of_rides, fill=member_casual)) +
  geom_col(position = "dodge") +
  scale_fill_manual(values = c("#87CEEB")) +
  theme(axis.text.x=element_text(angle=90,vjust=0.5,hjust=1)) +
  labs(title = "Number of Rides By Rider Type - Monthly")

member_plot4 <- trips_summary3%>%
  filter(member_casual == "member")%>%
  ggplot(aes(x=yearmonth, y=average_duration, fill=member_casual)) +
  geom_col(position = "dodge") +
  scale_fill_manual(values = c("#87CEEB")) +
  theme(axis.text.x=element_text(angle=90,vjust=0.5,hjust=1)) +
  labs(title = "Average Duration By Rider Type - Monthly")

##Casual
casual_plot3 <- trips_summary3%>%
  filter(member_casual == "casual")%>%
  ggplot(aes(x=yearmonth, y=number_of_rides, fill=member_casual)) +
  geom_col(position = "dodge") +
  theme(axis.text.x=element_text(angle=90,vjust=0.5,hjust=1)) +
  labs(title = "Number of Rides By Rider Type - Monthly")

casual_plot4 <- trips_summary3%>%
  filter(member_casual == "casual")%>%
  ggplot(aes(x=yearmonth, y=average_duration, fill=member_casual)) +
  geom_col(position = "dodge") +
  theme(axis.text.x=element_text(angle=90,vjust=0.5,hjust=1)) +
  labs(title = "Average Duration By Rider Type - Monthly")

## Individual dashboard - monthly
(member_plot3 | member_plot4) / (casual_plot3 | casual_plot4)

## Hourly Plot
##Number of rides
hourly_plot1 <- trips_summary4%>%
  ggplot(aes(x=day_hours, y=number_of_rides, fill=member_casual)) +
  geom_col(position = "dodge") +
  scale_x_continuous(breaks=seq(0,24, by=3)) +
  labs(title = "Number of Rides By Rider Type - Hourly",
       caption = "24 hour time format")
